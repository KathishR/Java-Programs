QUESTION :
____________

The program must accept a string S containing only digits as the input. The program must form the smallest possible
integer X using the digits in S. Finally, the program must print the value of X as the output.

Boundary Condition(s):
1 <= Length of S <= 1000
Input Format: The first line contains S. 

Output Format: The first line contains X.

Example Input/Output 1:
*************************
Input: 5413045415601160561561060606606067888799932266544445524554841887021
Output: 1000000000111111122223344444444445555555555666666666666777888888999

Explanation: 
    The smallest possible integer formed using the digits in 5413045415601160561561060606606067888799932266544445524554841887021
is 1000000000111111122223344444444445555555555666666666666777888888999. Hence the output is 10000000001111111222233444444444455555555
55666666666666777888888999 

Example Input/Output 2:
*************************
Input: 19830000189165435362390019123121

Output: 10000001111112223333345566889999

-------------------------------------------------------------------------------------------------------------------------------------------
PROGRAM :
__________
def small_pos_int(n):
    n1=n.lstrip()
    sort_n = sorted(n1)
    if '0' in sort_n:
        ind = sort_n.index('0')
        for i in range(ind+1,len(sort_n)):
            if(sort_n[i]!='0'):
                sort_n[i],sort_n[ind]=sort_n[ind],sort_n[i]
                break
            
    
    return ''.join(sort_n)
    
            


n=input().strip()
res=small_pos_int(n)
print(res)
---------------------------------------------------------------------------------------------------------------------------------------
